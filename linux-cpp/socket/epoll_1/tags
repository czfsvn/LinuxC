!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AcceptConn	Main.cpp	/^void AcceptConn(int fd, int events, void *arg)$/;"	f
EventAdd	Main.cpp	/^void EventAdd(int epollFd, int events, myevent_s *ev)$/;"	f
EventDel	Main.cpp	/^void EventDel(int epollFd, myevent_s *ev)$/;"	f
EventSet	Main.cpp	/^void EventSet(myevent_s *ev, int fd, void (*call_back)(int, int, void*), void *arg)$/;"	f
InitListenSocket	Main.cpp	/^void InitListenSocket(int epollFd, short port)$/;"	f
MAX_EVENTS	Main.cpp	23;"	d
RecvData	Main.cpp	/^void RecvData(int fd, int events, void *arg)$/;"	f
SendData	Main.cpp	/^void SendData(int fd, int events, void *arg)$/;"	f
arg	Main.cpp	/^    void *arg;$/;"	m	struct:myevent_s
buff	Main.cpp	/^    char buff[128]; \/\/ recv data buffer$/;"	m	struct:myevent_s
call_back	Main.cpp	/^    void (*call_back)(int fd, int events, void *arg);$/;"	m	struct:myevent_s
events	Main.cpp	/^    int events;$/;"	m	struct:myevent_s
fd	Main.cpp	/^    int fd;$/;"	m	struct:myevent_s
g_Events	Main.cpp	/^myevent_s g_Events[MAX_EVENTS+1]; \/\/ g_Events[MAX_EVENTS] is used by listen fd$/;"	v
g_epollFd	Main.cpp	/^int g_epollFd;$/;"	v
last_active	Main.cpp	/^    long last_active; \/\/ last active time$/;"	m	struct:myevent_s
len	Main.cpp	/^    int len, s_offset;$/;"	m	struct:myevent_s
main	Main.cpp	/^int main(int argc, char **argv)$/;"	f
myevent_s	Main.cpp	/^struct myevent_s$/;"	s
s_offset	Main.cpp	/^    int len, s_offset;$/;"	m	struct:myevent_s
status	Main.cpp	/^    int status; \/\/ 1: in epoll wait list, 0 not in$/;"	m	struct:myevent_s
